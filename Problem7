package org.avcoe.practice;

/**
 * 
 * @author sham
 * 
 * @description 10001st prime
 * 
 * By listing the first six prime numbers: 2, 3, 5, 7, 11, 
 * and 13, we can see that the 6th prime is 13. What is the
 * 10001st prime number?
 */

public class Problem7 {
	
	/**
	 * To find the Nth prime number starting from 2 as 
	 * first prime number
	 * @param limit Nth number of which position prime number to be find
	 * @return Nth prime number
	 */
	
	public static int prime10001st(int limit) {
		int count = 1;
		int i= 3,j= 0,cnt = 0;
		for(count=1;count<limit;i=i+2) {
			cnt = 0;
			for(j=1;j<=i;j=j+2) {
				if(i%j == 0) { 
					cnt++; 
				}
			}
			
			if(cnt == 2) {
				count++;
				//System.out.println(count);
			}
		}
		return i-2;
	}
	
	/**
	 * Driver method which is entry point for program 
	 * @param args
	 */
	
	public static void main(String[] args) {
		System.out.println("Prime No => "+prime10001st(10001));

	}

}
